


/****************** LISTA USUARIOS *********************/

U1::= usuarios1 U2 usuarios2;

U2::= U3:nt1 U2:nt2  {:   :}
     | U3:nt1       {:  :};

U3::= usuario1 usuario1 correo:t1 usuario2 U4:nt1 {: listaUsuarios l = new listaUsuarios();  l.setUsuario(t1);  l.setNombre(nt1.getNombre());  l.setFecha(nt1.getFecha()); l.setClave(nt1.getClave());  parser.listaU.add(l); RESULT= l; :};

U4::= nombre1 TEXTO:t1 nombre2 U5:nt1             {: listaUsuarios l = new listaUsuarios();  l.setNombre(t1);  l.setFecha(nt1.getFecha()); l.setClave(nt1.getClave());  RESULT= l;  :};

U5::= fecha1 fecha:t1 coma hora:t2 fecha2 U6:nt1  {: listaUsuarios l = new listaUsuarios();  l.setFecha(t1+","+t2); l.setClave(nt1.getClave());   RESULT= l;  :};

U6::= clave1 TEXTO:t1 clave2 usuario2             {: listaUsuarios l = new listaUsuarios();  l.setClave(t1);   RESULT= l;  :};




/******************Inicia Sesion ****************************/

IS1::= abrir sesion1 id igual c2 correo c2 tipo igual c2 inicio c2 cerrar IS2 sesion2;

IS2::= usuario1 correo:t1 usuario2 IS3:nt1          {: listaUsuarios l = new listaUsuarios();  l.setUsuario(t1);   l.setClave(nt1.getClave());  parser.usuario=l; RESULT= l; :};

IS3::= clave1 TEXTO:t1 clave2                      {: listaUsuarios l = new listaUsuarios();  l.setClave(t1);  RESULT= l;  :};


/******************Respuesta Mensaje *********************/

RC1::= abrir sesion1 id igual c2 correo c2 cerrar RC2 sesion2; 

RC2::= registro1 TEXTO:t1 registro2 {: parser.msjCuenta= t1;  :}
      | error1 TEXTO:t1   error2    {: parser.msjCuenta= t1;  :};






/********************peticion lista correos *****************************/

PLC1::= abrir sesion1 id igual c2 correo c2 peticion igual c2 listaC c2 cerrar PLC2 sesion2;

PLC2::= usuario1 correo:t1 usuario2          {: parser.lUsuario = t1; :};


/******************* Lista Correos **************************************/

LC1 ::= abrir correos1 usuario igual c2 correo c2 cerrar LC2 correos2;

LC2 ::= LC3 LC2
        |LC3;

LC3 ::= correo1 asunto1 TEXTO:t1 asunto2 fecha1 fecha:t21 coma hora:t22 fecha2 de1 correo:t3 de2 nombre1 TEXTO:t4 nombre2 contenido1 TEXTO:t5 contenido2 archivo1 archivo2 correo2{: c++; parser.listaM.add(new listaMensajes(c,"","",t1,t21+","+t22,t3,t4,t5,"")); :};

/******************* Respuesta Lista Correos **************************************/

RLC1::= abrir sesion1 id igual c2 correo c2 tipo igual c2 TEXTO c2 cerrar RLC2 sesion2;

RLC2 ::= RLC3 RLC2
        |RLC3;

RLC3 ::= correo1 usuario1 correo:t1 usuario2 nombre1 TEXTO:t2 nombre2 asunto1 TEXTO:t3 asunto2 fecha1 fecha:t41 coma hora:t42 fecha2 de1 correo:t5 de2 nombre1 TEXTO:t6 nombre2  correo2{: c++; parser.listaM.add(new listaMensajes(c, t1,t2, t3, t41+","+t42,t5,t6,"","")); :};

/******************* PETICION DE UN CORREO **************************************/

PC1::=  abrir sesion1 id igual c2 correo c2 peticion igual c2 correo c2 de igual c2 correo c2 fecha_t igual c2 fecha coma hora c2 cerrar usuario1 correo usuario2 sesion2;



non terminal String INICIA, C1, C2, TEXTO, CADENA;

//non terminal listaUsuarios C1, C2, C3, C4, C5, U1, U2, U3, U4, U5, U6, IS1, IS2, IS3;
//non terminal listaMensajes LC1, LC2, LC3, RLC1, RLC2, RLC3;

//non terminal String PLC1, PLC2, PC1; 

start with INICIA;

INICIA::= C1;



<usuarios>
<usuario>
<usuario>Usuario56@servidorA.com</usuario>
<nombre>nombres</nombre>
<fecha>10-03-2014,12:40:02</fecha>
<clave>clave</clave>
</usuario>
<usuario>
<usuario>Usuario1@servidorA.com</usuario>
<nombre>usuario1</nombre>
<fecha>10-03-2014,12:40:02</fecha>
<clave>clave</clave>
</usuario>
<usuario>
<usuario>Usuario2@servidorA.com</usuario>
<nombre>usuario2</nombre>
<fecha>10-03-2014,12:40:02</fecha>
<clave>clave</clave>
</usuario>
<usuario>
<usuario>Usuario5@servidorA.com</usuario>
<nombre>usuario5</nombre>
<fecha>10-03-2014,12:40:02</fecha>
<clave>clave5</clave>
</usuario>
<usuario>
<usuario>Usuario4@servidorA.com</usuario>
<nombre>usuario4</nombre>
<fecha>10-03-2014,12:40:02</fecha>
<clave>clave4</clave>
</usuario>
<usuario>
<usuario>Usuario20@servidorA.com</usuario>
<nombre>usuario20</nombre>
<fecha>10-03-2014,12:40:02</fecha>
<clave>clave20</clave>
</usuario>
<usuario>
<usuario>Usuario10@servidorA.com</usuario>
<nombre>usuario10</nombre>
<fecha>10-03-2014,12:40:02</fecha>
<clave>clave</clave>
</usuario>
<usuario>
<usuario>Usuario77@servidorA.com</usuario>
<nombre>usuario77</nombre>
<fecha>10-03-2014,12:40:02</fecha>
<clave>clave</clave>
</usuario>
<usuario>
<usuario>usuario99@servidorA.com</usuario>
<nombre>usuario99</nombre>
<fecha>10-03-2014,12:40:02</fecha>
<clave>clave</clave>
</usuario>
</usuarios>



public int iniciarSesion(String content){
    
         System.out.println("entro"+content);
       usuario user = compilar(content).usuario;
     
         if(user.getUsuario() != null){
                    
                      LinkedList<usuario> listaUsuarios= getListaUsuarios();
                      
         if (comprobarSesion(listaUsuarios, user.getUsuario(), user.getClave())==1){
             
                    insertLog("Session iniciada: "+user.getUsuario());   
                    return 1;
               //  return "<sesion id=\"correo\">\n" +
                  //      "<Registro> Session iniciada </Registro>\n" +
                 //       "</sesion>";
         }else{
             insertLog("Usuario : "+user.getUsuario() +"intento iniciar session");  
             return 0;
           //  return "<sesion id=\"correo\">\n" +
                 //   "<Error> Verifique credenciales </Error>\n" +
                 //   "</sesion>";
         }
                // System.out.println("existe");            
         }else{
             return 0;
            //  return "<sesion id=\"correo\">\n" +
                //    "<Error> Error procesar parser </Error>\n" +
               //     "</sesion>";
         }
        
       // return content;
    
    }
     
     public  int comprobarSesion(LinkedList<usuario> lista, String usuario, String clave){
        
       //    if (s.listaU.size() > 0) {
            System.out.println("####USUARIOS ----");

            Iterator<usuario> itU = lista.iterator(); /*
             * Listar los errores que se han guardado en la variable lista
             */

            while (itU.hasNext()) {
                usuario listaU = itU.next();
              //  System.out.println("User: " + listaU.usuario + " Nombre :" + listaU.nombre + " Clave: " + listaU.clave);
                System.out.println("User: " + listaU.usuario + " User2 :" + usuario );
               
                if (listaU.getUsuario().equals(usuario) && listaU.getClave().equals(clave)) {
                    return 1;
                }
            }
            return 0;
        //}
       // return 1;
    } 
     
      public parser compilar(String content){
        LinkedList<Errores> lista = new LinkedList<Errores>();
        parser s=null;
        String Salida = "####Despues de la gramatica: \n";

        System.out.println("*************************************");
        System.out.println("####Archivo de entrada: \n" + content);
        try {
            scanner scan = new scanner(new BufferedReader(new StringReader(content)));
            scan.lista = lista;
            s = new parser(scan);
            s.lista = scan.lista;
            s.Salida = Salida;
            s.parse();
            
        } catch (Exception ex) {
        }
        System.out.println("####Errores ----");
        Iterator<Errores> it = lista.iterator(); /*
         * Listar los errores que se han guardado en la variable lista
         */
        while (it.hasNext()) {
            Errores error = it.next();
            
            insertLog("Linea: " + error.Linea + " Columna :" + error.Columna + " Descr: " + error.Descripcion); 
            System.out.println("Linea: " + error.Linea + " Columna :" + error.Columna + " Descr: " + error.Descripcion);
        }  
          
        
        return s;
    }
      
       public void insertLog(String log){
    
        DateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy , HH:mm:ss");
        Date date = new Date();
      //  System.out.println(dateFormat.format(date));
        String lineaLog = dateFormat.format(date)+" , "+log;
        
        escribirLog(dir+"BitacoraServidorA.txt", lineaLog);
    }
    
     public void escribirLog(String archivo, String contenido){
         FileWriter fichero = null;
        PrintWriter pw = null;
        try
        {
            fichero = new FileWriter(archivo, true);
            pw = new PrintWriter(fichero);
 
            
                pw.println(contenido);
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
           try {
           // Nuevamente aprovechamos el finally para 
           // asegurarnos que se cierra el fichero.
           if (null != fichero)
              fichero.close();
           } catch (Exception e2) {
              e2.printStackTrace();
           }
        }
    }
     
      public LinkedList<usuario> getListaUsuarios(){
    
      parser p =  compilar(leerArchivo(usuarios_xml));
        
      return p.listaUsuarios;    
    }
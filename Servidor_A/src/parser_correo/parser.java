
//----------------------------------------------------
// The following code was generated by CUP v0.11a beta 20060608
// Thu Mar 27 22:54:34 CST 2014
//----------------------------------------------------

package parser_correo;

import java.io.*;
import java.util.LinkedList;
import java.util.ArrayList;
import java_cup.runtime.*;
import java.util.Iterator;

/** CUP v0.11a beta 20060608 generated parser.
  * @version Thu Mar 27 22:54:34 CST 2014
  */
public class parser extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public parser() {super();}

  /** Constructor which sets the default scanner. */
  public parser(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public parser(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\077\000\002\002\004\000\002\010\003\000\002\010" +
    "\003\000\002\010\003\000\002\010\003\000\002\010\003" +
    "\000\002\010\003\000\002\010\003\000\002\010\003\000" +
    "\002\010\003\000\002\010\003\000\002\010\003\000\002" +
    "\010\003\000\002\011\021\000\002\012\020\000\002\022" +
    "\021\000\002\023\010\000\002\024\021\000\002\025\005" +
    "\000\002\013\004\000\002\013\003\000\002\014\003\000" +
    "\002\014\003\000\002\014\003\000\002\014\003\000\002" +
    "\014\003\000\002\015\005\000\002\016\004\000\002\016" +
    "\003\000\002\017\022\000\002\020\014\000\002\021\005" +
    "\000\002\021\005\000\002\026\014\000\002\027\004\000" +
    "\002\027\003\000\002\030\026\000\002\031\021\000\002" +
    "\032\004\000\002\032\003\000\002\033\030\000\002\034" +
    "\037\000\002\035\026\000\002\036\035\000\002\037\004" +
    "\000\002\037\003\000\002\040\005\000\002\002\005\000" +
    "\002\002\004\000\002\003\004\000\002\003\003\000\002" +
    "\004\020\000\002\005\004\000\002\005\003\000\002\006" +
    "\020\000\002\041\005\000\002\042\005\000\002\044\004" +
    "\000\002\044\003\000\002\043\005\000\002\045\006\000" +
    "\002\046\005\000\002\046\002" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u011c\000\010\020\021\030\011\063\012\001\002\000" +
    "\004\002\ufff6\001\002\000\004\002\ufffb\001\002\000\004" +
    "\002\ufff7\001\002\000\004\002\ufff5\001\002\000\004\002" +
    "\ufffc\001\002\000\006\034\170\061\167\001\002\000\020" +
    "\004\041\005\036\006\037\012\035\036\062\056\063\060" +
    "\040\001\002\000\004\002\ufffe\001\002\000\004\002\ufff8" +
    "\001\002\000\004\002\000\001\002\000\004\002\ufffa\001" +
    "\002\000\004\002\uffff\001\002\000\004\002\ufffd\001\002" +
    "\000\004\036\027\001\002\000\004\002\ufff9\001\002\000" +
    "\004\002\024\001\002\000\004\002\001\001\002\000\006" +
    "\021\uffe5\036\027\001\002\000\004\021\056\001\002\000" +
    "\004\036\030\001\002\000\004\026\031\001\002\000\004" +
    "\037\032\001\002\000\004\042\033\001\002\000\014\004" +
    "\041\005\036\006\037\012\035\060\040\001\002\000\004" +
    "\043\044\001\002\000\034\004\uffe9\005\uffe9\006\uffe9\007" +
    "\uffe9\012\uffe9\041\uffe9\043\uffe9\047\uffe9\051\uffe9\060\uffe9" +
    "\064\uffe9\066\uffe9\072\uffe9\001\002\000\034\004\uffeb\005" +
    "\uffeb\006\uffeb\007\uffeb\012\uffeb\041\uffeb\043\uffeb\047\uffeb" +
    "\051\uffeb\060\uffeb\064\uffeb\066\uffeb\072\uffeb\001\002\000" +
    "\034\004\uffec\005\uffec\006\uffec\007\uffec\012\uffec\041\uffec" +
    "\043\uffec\047\uffec\051\uffec\060\uffec\064\uffec\066\uffec\072" +
    "\uffec\001\002\000\034\004\uffe8\005\uffe8\006\uffe8\007\uffe8" +
    "\012\uffe8\041\uffe8\043\uffe8\047\uffe8\051\uffe8\060\uffe8\064" +
    "\uffe8\066\uffe8\072\uffe8\001\002\000\034\004\uffea\005\uffea" +
    "\006\uffea\007\uffea\012\uffea\041\uffea\043\uffea\047\uffea\051" +
    "\uffea\060\uffea\064\uffea\066\uffea\072\uffea\001\002\000\034" +
    "\004\041\005\036\006\037\007\uffed\012\035\041\uffed\043" +
    "\uffed\047\uffed\051\uffed\060\040\064\uffed\066\uffed\072\uffed" +
    "\001\002\000\022\007\uffee\041\uffee\043\uffee\047\uffee\051" +
    "\uffee\064\uffee\066\uffee\072\uffee\001\002\000\004\044\045" +
    "\001\002\000\004\010\046\001\002\000\004\032\047\001" +
    "\002\000\004\011\050\001\002\000\004\045\051\001\002" +
    "\000\004\040\052\001\002\000\014\004\041\005\036\006" +
    "\037\012\035\060\040\001\002\000\004\041\054\001\002" +
    "\000\004\037\055\001\002\000\006\021\uffe4\036\uffe4\001" +
    "\002\000\004\002\uffe7\001\002\000\004\021\uffe6\001\002" +
    "\000\006\056\063\064\uffc7\001\002\000\004\064\165\001" +
    "\002\000\004\026\077\001\002\000\004\015\067\001\002" +
    "\000\004\064\065\001\002\000\004\002\uffc9\001\002\000" +
    "\004\057\076\001\002\000\004\026\070\001\002\000\004" +
    "\016\071\001\002\000\006\046\073\057\uffc3\001\002\000" +
    "\004\057\uffc5\001\002\000\014\004\041\005\036\006\037" +
    "\012\035\060\040\001\002\000\004\047\075\001\002\000" +
    "\004\057\uffc4\001\002\000\006\056\uffc6\064\uffc6\001\002" +
    "\000\004\037\100\001\002\000\004\065\101\001\002\000" +
    "\014\004\041\005\036\006\037\012\035\060\040\001\002" +
    "\000\004\066\103\001\002\000\004\044\104\001\002\000" +
    "\004\010\105\001\002\000\004\032\106\001\002\000\004" +
    "\011\107\001\002\000\004\045\110\001\002\000\004\067" +
    "\111\001\002\000\004\026\112\001\002\000\004\070\113" +
    "\001\002\000\004\071\114\001\002\000\014\004\041\005" +
    "\036\006\037\012\035\060\040\001\002\000\004\072\116" +
    "\001\002\000\004\074\120\001\002\000\004\064\164\001" +
    "\002\000\006\075\124\076\121\001\002\000\004\025\127" +
    "\001\002\000\006\075\uffcf\076\uffcf\001\002\000\006\075" +
    "\126\076\121\001\002\000\006\035\uffd1\064\uffd1\001\002" +
    "\000\006\075\uffd0\076\uffd0\001\002\000\006\035\uffd2\064" +
    "\uffd2\001\002\000\004\033\130\001\002\000\004\007\131" +
    "\001\002\000\004\073\132\001\002\000\004\007\133\001" +
    "\002\000\004\100\134\001\002\000\004\033\135\001\002" +
    "\000\004\007\136\001\002\000\014\004\041\005\036\006" +
    "\037\012\035\060\040\001\002\000\004\007\140\001\002" +
    "\000\004\031\141\001\002\000\004\104\143\001\002\000" +
    "\006\077\163\104\143\001\002\000\004\101\145\001\002" +
    "\000\006\077\uffcc\104\uffcc\001\002\000\004\033\146\001" +
    "\002\000\004\005\147\001\002\000\004\102\150\001\002" +
    "\000\004\033\151\001\002\000\004\005\152\001\002\000" +
    "\004\103\153\001\002\000\004\033\154\001\002\000\004" +
    "\007\155\001\002\000\014\004\041\005\036\006\037\012" +
    "\035\060\040\001\002\000\004\007\157\001\002\000\004" +
    "\031\160\001\002\000\004\105\161\001\002\000\006\077" +
    "\uffcb\104\uffcb\001\002\000\006\077\uffcd\104\uffcd\001\002" +
    "\000\006\075\uffce\076\uffce\001\002\000\004\002\uffd7\001" +
    "\002\000\004\002\uffca\001\002\000\004\064\uffc8\001\002" +
    "\000\004\060\u0101\001\002\000\006\024\172\052\171\001" +
    "\002\000\004\033\344\001\002\000\004\033\173\001\002" +
    "\000\004\007\174\001\002\000\004\023\175\001\002\000" +
    "\004\007\176\001\002\000\010\025\200\031\201\052\177" +
    "\001\002\000\004\033\307\001\002\000\004\033\212\001" +
    "\002\000\006\046\204\050\203\001\002\000\004\035\211" +
    "\001\002\000\014\004\041\005\036\006\037\012\035\060" +
    "\040\001\002\000\014\004\041\005\036\006\037\012\035" +
    "\060\040\001\002\000\004\047\206\001\002\000\004\035" +
    "\uffe1\001\002\000\004\051\210\001\002\000\004\035\uffe2" +
    "\001\002\000\004\002\uffe3\001\002\000\004\007\213\001" +
    "\002\000\010\017\216\027\214\055\215\001\002\000\004" +
    "\007\265\001\002\000\004\007\231\001\002\000\004\007" +
    "\217\001\002\000\004\031\220\001\002\000\004\036\221" +
    "\001\002\000\004\026\224\001\002\000\004\035\223\001" +
    "\002\000\004\002\ufff2\001\002\000\004\037\225\001\002" +
    "\000\004\040\226\001\002\000\014\004\041\005\036\006" +
    "\037\012\035\060\040\001\002\000\004\041\230\001\002" +
    "\000\004\035\ufff1\001\002\000\004\031\232\001\002\000" +
    "\004\063\234\001\002\000\006\035\uffda\063\234\001\002" +
    "\000\004\036\237\001\002\000\004\035\236\001\002\000" +
    "\004\002\uffdc\001\002\000\004\026\240\001\002\000\004" +
    "\037\241\001\002\000\004\042\242\001\002\000\014\004" +
    "\041\005\036\006\037\012\035\060\040\001\002\000\004" +
    "\043\244\001\002\000\004\065\245\001\002\000\014\004" +
    "\041\005\036\006\037\012\035\060\040\001\002\000\004" +
    "\066\247\001\002\000\004\044\250\001\002\000\004\010" +
    "\251\001\002\000\004\032\252\001\002\000\004\011\253" +
    "\001\002\000\004\045\254\001\002\000\004\067\255\001" +
    "\002\000\004\026\256\001\002\000\004\070\257\001\002" +
    "\000\004\042\260\001\002\000\014\004\041\005\036\006" +
    "\037\012\035\060\040\001\002\000\004\043\262\001\002" +
    "\000\004\064\263\001\002\000\006\035\uffd9\063\uffd9\001" +
    "\002\000\004\035\uffdb\001\002\000\004\031\266\001\002" +
    "\000\004\036\267\001\002\000\004\026\272\001\002\000" +
    "\004\035\271\001\002\000\004\002\ufff4\001\002\000\004" +
    "\037\273\001\002\000\004\042\274\001\002\000\014\004" +
    "\041\005\036\006\037\012\035\060\040\001\002\000\004" +
    "\043\276\001\002\000\004\044\277\001\002\000\004\010" +
    "\300\001\002\000\004\032\301\001\002\000\004\011\302" +
    "\001\002\000\004\045\303\001\002\000\004\040\304\001" +
    "\002\000\014\004\041\005\036\006\037\012\035\060\040" +
    "\001\002\000\004\041\306\001\002\000\004\035\ufff3\001" +
    "\002\000\004\007\310\001\002\000\006\023\312\053\311" +
    "\001\002\000\004\007\335\001\002\000\004\007\313\001" +
    "\002\000\004\054\314\001\002\000\004\033\315\001\002" +
    "\000\004\007\316\001\002\000\004\026\317\001\002\000" +
    "\004\007\320\001\002\000\004\022\321\001\002\000\004" +
    "\033\322\001\002\000\004\007\323\001\002\000\004\010" +
    "\324\001\002\000\004\032\325\001\002\000\004\011\326" +
    "\001\002\000\004\007\327\001\002\000\004\031\330\001" +
    "\002\000\004\036\331\001\002\000\004\026\332\001\002" +
    "\000\004\037\333\001\002\000\004\035\334\001\002\000" +
    "\004\002\uffd8\001\002\000\004\031\336\001\002\000\004" +
    "\036\340\001\002\000\004\035\343\001\002\000\004\026" +
    "\341\001\002\000\004\037\342\001\002\000\004\035\uffef" +
    "\001\002\000\004\002\ufff0\001\002\000\004\007\345\001" +
    "\002\000\004\012\346\001\002\000\004\007\347\001\002" +
    "\000\004\031\350\001\002\000\004\036\351\001\002\000" +
    "\004\026\352\001\002\000\004\037\353\001\002\000\004" +
    "\013\354\001\002\000\004\015\355\001\002\000\004\026" +
    "\377\001\002\000\006\014\uffd4\015\355\001\002\000\004" +
    "\014\360\001\002\000\004\065\361\001\002\000\014\004" +
    "\041\005\036\006\037\012\035\060\040\001\002\000\004" +
    "\066\363\001\002\000\004\044\364\001\002\000\004\010" +
    "\365\001\002\000\004\032\366\001\002\000\004\011\367" +
    "\001\002\000\004\045\370\001\002\000\004\071\371\001" +
    "\002\000\014\004\041\005\036\006\037\012\035\060\040" +
    "\001\002\000\004\072\373\001\002\000\004\074\120\001" +
    "\002\000\004\035\375\001\002\000\004\002\uffd6\001\002" +
    "\000\004\014\uffd5\001\002\000\004\016\u0100\001\002\000" +
    "\006\014\uffd3\015\uffd3\001\002\000\004\033\u0102\001\002" +
    "\000\004\007\u0103\001\002\000\004\026\u0104\001\002\000" +
    "\004\007\u0105\001\002\000\004\031\u0106\001\002\000\004" +
    "\063\u0107\001\002\000\004\065\u010c\001\002\000\006\062" +
    "\uffde\063\u0107\001\002\000\004\062\u010a\001\002\000\004" +
    "\002\uffe0\001\002\000\004\062\uffdf\001\002\000\014\004" +
    "\041\005\036\006\037\012\035\060\040\001\002\000\004" +
    "\066\u010e\001\002\000\004\044\u010f\001\002\000\004\010" +
    "\u0110\001\002\000\004\032\u0111\001\002\000\004\011\u0112" +
    "\001\002\000\004\045\u0113\001\002\000\004\067\u0114\001" +
    "\002\000\004\026\u0115\001\002\000\004\070\u0116\001\002" +
    "\000\004\042\u0117\001\002\000\014\004\041\005\036\006" +
    "\037\012\035\060\040\001\002\000\004\043\u0119\001\002" +
    "\000\004\071\u011a\001\002\000\014\004\041\005\036\006" +
    "\037\012\035\060\040\001\002\000\004\072\u011c\001\002" +
    "\000\004\074\120\001\002\000\004\064\u011e\001\002\000" +
    "\006\062\uffdd\063\uffdd\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u011c\000\034\010\022\011\014\015\016\020\012\022" +
    "\017\024\007\026\004\031\015\034\021\035\013\036\005" +
    "\041\003\042\006\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\012\013\060\014\041\043\057\044" +
    "\063\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\016\025\017\024\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\016\056\017" +
    "\024\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\013" +
    "\033\014\041\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\013\042\014\041\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\013\052\014\041\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\043\057\044\165\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\045\065\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\046\071\001\001\000\002" +
    "\001\001\000\006\013\073\014\041\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\013\101\014\041\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\013\114\014\041\001\001\000\002\001\001\000" +
    "\004\002\116\001\001\000\002\001\001\000\006\003\122" +
    "\004\121\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\004\124\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\013\136\014\041\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\005\141" +
    "\006\143\001\001\000\004\006\161\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\013\155\014\041\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\021\201\001\001\000\002\001" +
    "\001\000\006\013\206\014\041\001\001\000\006\013\204" +
    "\014\041\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\023\221" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\013\226" +
    "\014\041\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\032\234\033\232\001\001\000\006" +
    "\032\263\033\232\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\013\242\014\041\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\013\245\014\041" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\013\260\014\041\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\012\267\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\013\274\014\041\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\013\304\014\041\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\025\336\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\037\356\040\355\001\001\000\002\001\001\000\006" +
    "\037\375\040\355\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\013\361\014\041\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\013\371\014\041\001\001\000\002\001\001\000\004\002" +
    "\373\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\027\u0108\030\u0107\001\001\000" +
    "\002\001\001\000\006\027\u010a\030\u0107\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\013" +
    "\u010c\014\041\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\013\u0117\014\041\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\013\u011a" +
    "\014\041\001\001\000\002\001\001\000\004\002\u011c\001" +
    "\001\000\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$parser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$parser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$parser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



public  String lUsuario;
public  String lNombre;
public  String pass;
public int respuesta;
public String msjCuenta;
public String rCorreo="";
    
        public LinkedList<Errores> lista         = new LinkedList<Errores>();
        public LinkedList<usuario> listaUsuarios = new LinkedList<usuario>();
        public usuario usuario;
        public LinkedList<correo> listaCorreos =new LinkedList<correo>();
        public LinkedList<archivo> listaArchivos = new LinkedList<archivo>();
public correo correo;

        public correo_envio correo_envio;

        /*Variable de salida*/
        public String Salida=new String();

            /**Metodo al que se llama automaticamente ante algun error sintactico.*/
public void syntax_error(Symbol s){
       // System.out.println("Error en la Linea " + (s.right+1) +" Columna "+s.left+ ". Identificador " +s.value + " no reconocido." );
        lista.add(new Errores(s.right+1,s.left,"Error sintactico Identificador " +s.value + " no reconocido." ));
}
             /**Metodo al que se llama en el momento en que ya no es posible una recuperacion de errores.*/
public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{
       // System.out.println("Error en la Linea " + (s.right+1)+ "Columna "+s.left+". Identificador " + s.value + " no reconocido.");
       // lista.add(new Errores(s.right+1,s.left,"Error sintactico2 Identificador " +s.value + " no reconocido." ));
}


}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$parser$actions {


int c=0;
String[] username;
LinkedList<String> destinatarios = new LinkedList<String>();
LinkedList<celdaPG> celdas = new LinkedList<celdaPG>();


  private final parser parser;

  /** Constructor */
  CUP$parser$actions(parser parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$parser$do_action(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$parser$result;

      /* select the action based on the action number */
      switch (CUP$parser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // REC4 ::= 
            {
              Object RESULT =null;
		 RESULT= "EXITO"; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("REC4",36, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // REC4 ::= error1 TEXTO error2 
            {
              Object RESULT =null;
		int t1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int t1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String t1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		 RESULT = t1;  
              CUP$parser$result = parser.getSymbolFactory().newSymbol("REC4",36, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // REC3 ::= destinatario1 correo destinatario2 REC4 
            {
              Object RESULT =null;
		int t1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int t1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String t1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int t2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int t2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Object t2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 parser.rCorreo+=t1+":"+t2+"\n";  
              CUP$parser$result = parser.getSymbolFactory().newSymbol("REC3",35, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // REC2 ::= enviado1 REC3 enviado2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("REC2",33, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // LREC2 ::= REC2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("LREC2",34, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // LREC2 ::= REC2 LREC2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("LREC2",34, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // REC1 ::= correo1 LREC2 correo2 
            {
              Object RESULT =null;
		 parser.respuesta=9; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("REC1",32, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // MR1 ::= correo1 TEXTO correo2 
            {
              Object RESULT =null;
		int t1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int t1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String t1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		 parser.respuesta=8; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("MR1",31, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // CPG2 ::= celda1 fila igual num columna igual num color igual c2 TEXTO c2 cerrar celda2 
            {
              String RESULT =null;
		int t1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-10)).left;
		int t1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-10)).right;
		String t1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-10)).value;
		int t2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left;
		int t2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).right;
		String t2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		int t3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int t3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String t3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		 celdas.add(new celdaPG(t1, t2, t3));  
              CUP$parser$result = parser.getSymbolFactory().newSymbol("CPG2",4, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-13)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // CPG1 ::= CPG2 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CPG1",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // CPG1 ::= CPG1 CPG2 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CPG1",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // A3 ::= archivo1 tipo igual c2 pg c2 tamanio igual c2 TEXTO c2 cerrar CPG1 archivo2 
            {
              String RESULT =null;
		int t1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).left;
		int t1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).right;
		String t1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-9)).value;
		int t2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int t2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String t2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		 parser.listaArchivos.add(new archivo(t1, t2, celdas));  
              CUP$parser$result = parser.getSymbolFactory().newSymbol("A3",2, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-13)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // A2 ::= A3 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("A2",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // A2 ::= A2 A3 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("A2",1, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // A1 ::= archivos1 archivos2 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("A1",0, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // A1 ::= archivos1 A2 archivos2 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("A1",0, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // LD2 ::= destinatario1 correo destinatario2 
            {
              Object RESULT =null;
		int t1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int t1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String t1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		 RESULT= t1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("LD2",30, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // LD1 ::= LD2 
            {
              Object RESULT =null;
		int t1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int t1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Object t1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 destinatarios.add(t1.toString()); RESULT=t1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("LD1",29, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // LD1 ::= LD2 LD1 
            {
              Object RESULT =null;
		int t1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int t1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Object t1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int t2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int t2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Object t2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 destinatarios.add(t1.toString());  
              CUP$parser$result = parser.getSymbolFactory().newSymbol("LD1",29, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // RNC1 ::= abrir sesion1 peticion igual c2 envio c2 cerrar usuario1 correo usuario2 destinatarios1 LD1 destinatarios2 asunto1 TEXTO asunto2 fecha1 fecha coma hora fecha2 contenido1 TEXTO contenido2 A1 sesion2 
            {
              Object RESULT =null;
		int t1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-17)).left;
		int t1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-17)).right;
		String t1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-17)).value;
		int t2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-11)).left;
		int t2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-11)).right;
		String t2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-11)).value;
		int t31left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).left;
		int t31right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).right;
		String t31 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-8)).value;
		int t32left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left;
		int t32right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).right;
		String t32 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		int t4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int t4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String t4 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		 parser.respuesta=7;  parser.correo_envio = new correo_envio(t1,destinatarios,t2,t31+","+t32,t4, parser.listaArchivos); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RNC1",28, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-26)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // RPC1 ::= correo1 usuario1 correo usuario2 asunto1 TEXTO asunto2 fecha1 fecha coma hora fecha2 de1 correo de2 contenido1 TEXTO contenido2 A1 correo2 
            {
              Object RESULT =null;
		int t1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-17)).left;
		int t1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-17)).right;
		String t1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-17)).value;
		int t2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-14)).left;
		int t2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-14)).right;
		String t2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-14)).value;
		int t31left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-11)).left;
		int t31right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-11)).right;
		String t31 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-11)).value;
		int t32left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).left;
		int t32right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).right;
		String t32 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-9)).value;
		int t4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left;
		int t4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).right;
		String t4 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		int t5left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int t5right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String t5 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		 parser.respuesta=6; c++; parser.correo = new correo(c,t1,"",t2,t31+","+t32,t4,"",t5, parser.listaArchivos); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RPC1",27, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-19)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // PC1 ::= abrir sesion1 id igual c2 correo_t c2 peticion igual c2 correo_t c2 de igual c2 correo c2 fecha_t igual c2 fecha coma hora c2 cerrar usuario1 correo usuario2 sesion2 
            {
              Object RESULT =null;
		int t3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-13)).left;
		int t3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-13)).right;
		String t3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-13)).value;
		int t21left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).left;
		int t21right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).right;
		String t21 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-8)).value;
		int t22left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left;
		int t22right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).right;
		String t22 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		int t1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int t1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String t1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		 parser.respuesta=5; c++; parser.correo = new correo(c,t1,"","",t21+","+t22,t3,"", "", null);  
              CUP$parser$result = parser.getSymbolFactory().newSymbol("PC1",26, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-28)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // RLC3 ::= correo1 usuario1 correo usuario2 nombre1 TEXTO nombre2 asunto1 TEXTO asunto2 fecha1 fecha coma hora fecha2 de1 correo de2 nombre1 TEXTO nombre2 correo2 
            {
              Object RESULT =null;
		int t1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-19)).left;
		int t1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-19)).right;
		String t1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-19)).value;
		int t2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-16)).left;
		int t2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-16)).right;
		String t2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-16)).value;
		int t3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-13)).left;
		int t3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-13)).right;
		String t3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-13)).value;
		int t41left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-10)).left;
		int t41right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-10)).right;
		String t41 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-10)).value;
		int t42left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).left;
		int t42right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).right;
		String t42 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-8)).value;
		int t5left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int t5right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		String t5 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int t6left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int t6right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String t6 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		 c++; parser.listaCorreos.add(new correo(c,t1,t2,t3,t41+","+t42,t5,t6, "", null));  
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RLC3",25, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-21)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // RLC2 ::= RLC3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("RLC2",24, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // RLC2 ::= RLC3 RLC2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("RLC2",24, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // RLC1 ::= abrir sesion1 id igual c2 correo_t c2 tipo igual c2 lista c2 cerrar RLC2 sesion2 
            {
              Object RESULT =null;
		 parser.respuesta=4; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RLC1",23, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-14)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // LC3 ::= correo1 asunto1 TEXTO asunto2 fecha1 fecha coma hora fecha2 de1 correo de2 nombre1 TEXTO nombre2 contenido1 TEXTO contenido2 A1 correo2 
            {
              Object RESULT =null;
		int t1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-17)).left;
		int t1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-17)).right;
		String t1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-17)).value;
		int t21left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-14)).left;
		int t21right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-14)).right;
		String t21 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-14)).value;
		int t22left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-12)).left;
		int t22right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-12)).right;
		String t22 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-12)).value;
		int t3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).left;
		int t3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).right;
		String t3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-9)).value;
		int t4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left;
		int t4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).right;
		String t4 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		int t5left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int t5right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String t5 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		 c++; parser.listaCorreos.add(new correo(c,"","",t1,t21+","+t22,t3,t4,t5, parser.listaArchivos)); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("LC3",22, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-19)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // LC2 ::= LC3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("LC2",21, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // LC2 ::= LC3 LC2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("LC2",21, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // LC1 ::= abrir correos1 usuario igual c2 correo c2 cerrar LC2 correos2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("LC1",20, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // RC2 ::= error1 TEXTO error2 
            {
              String RESULT =null;
		int t1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int t1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String t1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		 parser.msjCuenta= t1; parser.respuesta=1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RC2",15, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // RC2 ::= registro1 TEXTO registro2 
            {
              String RESULT =null;
		int t1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int t1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String t1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		 parser.msjCuenta= t1; parser.respuesta=2; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RC2",15, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // RC1 ::= abrir sesion1 id igual c2 correo_t c2 cerrar RC2 sesion2 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("RC1",14, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // LU3 ::= usuario1 usuario1 correo usuario2 nombre1 TEXTO nombre2 fecha1 fecha coma hora fecha2 clave1 TEXTO clave2 usuario2 
            {
              usuario RESULT =null;
		int t1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-13)).left;
		int t1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-13)).right;
		String t1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-13)).value;
		int t2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-10)).left;
		int t2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-10)).right;
		String t2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-10)).value;
		int t31left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left;
		int t31right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).right;
		String t31 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		int t32left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int t32right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		String t32 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int t4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int t4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String t4 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		 username = t1.split("@");  parser.listaUsuarios.add(new usuario(t1, username[0], t2, t31+","+t32, t4));  
              CUP$parser$result = parser.getSymbolFactory().newSymbol("LU3",13, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-15)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // LU2 ::= LU3 
            {
              usuario RESULT =null;
		int nt1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int nt1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		usuario nt1 = (usuario)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		  
              CUP$parser$result = parser.getSymbolFactory().newSymbol("LU2",12, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // LU2 ::= LU3 LU2 
            {
              usuario RESULT =null;
		int nt1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int nt1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		usuario nt1 = (usuario)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int nt2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int nt2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		usuario nt2 = (usuario)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		   
              CUP$parser$result = parser.getSymbolFactory().newSymbol("LU2",12, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // LU1 ::= usuarios1 LU2 usuarios2 
            {
              usuario RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("LU1",11, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // CADENA ::= usuario 
            {
              String RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String t = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		  RESULT=t; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("CADENA",10, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // CADENA ::= envio 
            {
              String RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String t = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		  RESULT=t; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("CADENA",10, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // CADENA ::= signos 
            {
              String RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String t = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		  RESULT=t; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("CADENA",10, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // CADENA ::= num 
            {
              String RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String t = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		  RESULT=t; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("CADENA",10, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // CADENA ::= cad 
            {
              String RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String t = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		  RESULT=t; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("CADENA",10, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // TEXTO ::= CADENA 
            {
              String RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String t = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		  RESULT= t.toString();  
              CUP$parser$result = parser.getSymbolFactory().newSymbol("TEXTO",9, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // TEXTO ::= CADENA TEXTO 
            {
              String RESULT =null;
		int t1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int t1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String t1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int t2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int t2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String t2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		  t1 = t1+" "+t2;  RESULT=t1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("TEXTO",9, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // PLC2 ::= usuario1 correo usuario2 
            {
              Object RESULT =null;
		int t1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int t1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String t1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		 parser.lUsuario = t1; parser.respuesta= 3; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("PLC2",19, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // PLC1 ::= abrir sesion1 id igual c2 correo_t c2 peticion igual c2 listaC c2 cerrar PLC2 sesion2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PLC1",18, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-14)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // IS2 ::= usuario1 correo usuario2 clave1 TEXTO clave2 
            {
              String RESULT =null;
		int t1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int t1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String t1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int t2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int t2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String t2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		 username = t1.split("@"); parser.usuario = new usuario(t1, username[0], "", "", t2); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("IS2",17, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // IS1 ::= abrir sesion1 id igual c2 correo_t c2 tipo igual c2 inicio c2 cerrar IS2 sesion2 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("IS1",16, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-14)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // C2 ::= usuario1 correo usuario2 nombre1 TEXTO nombre2 fecha1 fecha coma hora fecha2 clave1 TEXTO clave2 
            {
              String RESULT =null;
		int t1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-12)).left;
		int t1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-12)).right;
		String t1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-12)).value;
		int t2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).left;
		int t2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).right;
		String t2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-9)).value;
		int t31left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left;
		int t31right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).right;
		String t31 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		int t32left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int t32right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String t32 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int t4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int t4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String t4 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		  username = t1.split("@"); parser.usuario = new usuario(t1, username[0], t2, t31+","+t32, t4); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("C2",8, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-13)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // C1 ::= abrir sesion1 id igual c2 correo_t c2 tipo igual c2 registro c2 cerrar C2 sesion2 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("C1",7, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-14)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // INICIA ::= REC1 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INICIA",6, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // INICIA ::= MR1 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INICIA",6, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // INICIA ::= RNC1 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INICIA",6, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // INICIA ::= RPC1 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INICIA",6, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // INICIA ::= PC1 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INICIA",6, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // INICIA ::= RLC1 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INICIA",6, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // INICIA ::= LC1 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INICIA",6, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // INICIA ::= PLC1 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INICIA",6, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // INICIA ::= IS1 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INICIA",6, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // INICIA ::= RC1 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INICIA",6, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // INICIA ::= LU1 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INICIA",6, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // INICIA ::= C1 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INICIA",6, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= INICIA EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String start_val = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		RESULT = start_val;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$parser$parser.done_parsing();
          return CUP$parser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}



//----------------------------------------------------
// The following code was generated by CUP v0.11a beta 20060608
// Mon Mar 31 22:08:47 CST 2014
//----------------------------------------------------

package parser_correo;

import java.io.*;
import java.util.LinkedList;
import java.util.ArrayList;
import java_cup.runtime.*;
import java.util.Iterator;

/** CUP v0.11a beta 20060608 generated parser.
  * @version Mon Mar 31 22:08:47 CST 2014
  */
public class parser extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public parser() {super();}

  /** Constructor which sets the default scanner. */
  public parser(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public parser(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\112\000\002\002\004\000\002\014\003\000\002\014" +
    "\003\000\002\014\003\000\002\014\003\000\002\014\003" +
    "\000\002\014\003\000\002\014\003\000\002\014\003\000" +
    "\002\014\003\000\002\014\003\000\002\014\003\000\002" +
    "\014\003\000\002\015\021\000\002\016\020\000\002\026" +
    "\021\000\002\027\010\000\002\030\021\000\002\031\005" +
    "\000\002\017\004\000\002\017\003\000\002\020\003\000" +
    "\002\020\003\000\002\020\003\000\002\020\003\000\002" +
    "\020\003\000\002\021\005\000\002\022\004\000\002\022" +
    "\003\000\002\023\022\000\002\024\014\000\002\025\005" +
    "\000\002\025\005\000\002\032\014\000\002\033\004\000" +
    "\002\033\003\000\002\053\002\000\002\034\027\000\002" +
    "\035\021\000\002\036\004\000\002\036\003\000\002\037" +
    "\030\000\002\040\037\000\002\054\002\000\002\041\027" +
    "\000\002\055\002\000\002\042\036\000\002\043\004\000" +
    "\002\043\003\000\002\044\005\000\002\002\005\000\002" +
    "\002\004\000\002\003\004\000\002\003\003\000\002\004" +
    "\003\000\002\004\003\000\002\056\002\000\002\005\021" +
    "\000\002\011\004\000\002\011\003\000\002\012\020\000" +
    "\002\057\002\000\002\006\014\000\002\007\004\000\002" +
    "\007\003\000\002\010\033\000\002\045\005\000\002\046" +
    "\005\000\002\050\004\000\002\050\003\000\002\047\005" +
    "\000\002\051\006\000\002\052\005\000\002\052\002" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u0143\000\010\020\021\030\011\063\012\001\002\000" +
    "\004\002\ufff6\001\002\000\004\002\ufffb\001\002\000\004" +
    "\002\ufff7\001\002\000\004\002\ufff5\001\002\000\004\002" +
    "\ufffc\001\002\000\006\034\235\061\234\001\002\000\020" +
    "\004\041\005\036\006\037\012\035\036\062\056\063\060" +
    "\040\001\002\000\004\002\ufffe\001\002\000\004\002\ufff8" +
    "\001\002\000\004\002\000\001\002\000\004\002\ufffa\001" +
    "\002\000\004\002\uffff\001\002\000\004\002\ufffd\001\002" +
    "\000\004\036\027\001\002\000\004\002\ufff9\001\002\000" +
    "\004\002\024\001\002\000\004\002\001\001\002\000\006" +
    "\021\uffe5\036\027\001\002\000\004\021\056\001\002\000" +
    "\004\036\030\001\002\000\004\026\031\001\002\000\004" +
    "\037\032\001\002\000\004\042\033\001\002\000\014\004" +
    "\041\005\036\006\037\012\035\060\040\001\002\000\004" +
    "\043\044\001\002\000\036\004\uffe9\005\uffe9\006\uffe9\007" +
    "\uffe9\012\uffe9\031\uffe9\041\uffe9\043\uffe9\047\uffe9\051\uffe9" +
    "\060\uffe9\064\uffe9\066\uffe9\072\uffe9\001\002\000\036\004" +
    "\uffeb\005\uffeb\006\uffeb\007\uffeb\012\uffeb\031\uffeb\041\uffeb" +
    "\043\uffeb\047\uffeb\051\uffeb\060\uffeb\064\uffeb\066\uffeb\072" +
    "\uffeb\001\002\000\036\004\uffec\005\uffec\006\uffec\007\uffec" +
    "\012\uffec\031\uffec\041\uffec\043\uffec\047\uffec\051\uffec\060" +
    "\uffec\064\uffec\066\uffec\072\uffec\001\002\000\036\004\uffe8" +
    "\005\uffe8\006\uffe8\007\uffe8\012\uffe8\031\uffe8\041\uffe8\043" +
    "\uffe8\047\uffe8\051\uffe8\060\uffe8\064\uffe8\066\uffe8\072\uffe8" +
    "\001\002\000\036\004\uffea\005\uffea\006\uffea\007\uffea\012" +
    "\uffea\031\uffea\041\uffea\043\uffea\047\uffea\051\uffea\060\uffea" +
    "\064\uffea\066\uffea\072\uffea\001\002\000\036\004\041\005" +
    "\036\006\037\007\uffed\012\035\031\uffed\041\uffed\043\uffed" +
    "\047\uffed\051\uffed\060\040\064\uffed\066\uffed\072\uffed\001" +
    "\002\000\024\007\uffee\031\uffee\041\uffee\043\uffee\047\uffee" +
    "\051\uffee\064\uffee\066\uffee\072\uffee\001\002\000\004\044" +
    "\045\001\002\000\004\010\046\001\002\000\004\032\047" +
    "\001\002\000\004\011\050\001\002\000\004\045\051\001" +
    "\002\000\004\040\052\001\002\000\014\004\041\005\036" +
    "\006\037\012\035\060\040\001\002\000\004\041\054\001" +
    "\002\000\004\037\055\001\002\000\006\021\uffe4\036\uffe4" +
    "\001\002\000\004\002\uffe7\001\002\000\004\021\uffe6\001" +
    "\002\000\006\056\063\064\uffbc\001\002\000\004\064\232" +
    "\001\002\000\004\026\077\001\002\000\004\015\067\001" +
    "\002\000\004\064\065\001\002\000\004\002\uffbe\001\002" +
    "\000\004\057\076\001\002\000\004\026\070\001\002\000" +
    "\004\016\071\001\002\000\006\046\073\057\uffb8\001\002" +
    "\000\004\057\uffba\001\002\000\014\004\041\005\036\006" +
    "\037\012\035\060\040\001\002\000\004\047\075\001\002" +
    "\000\004\057\uffb9\001\002\000\006\056\uffbb\064\uffbb\001" +
    "\002\000\004\037\100\001\002\000\004\065\101\001\002" +
    "\000\014\004\041\005\036\006\037\012\035\060\040\001" +
    "\002\000\004\066\103\001\002\000\004\044\104\001\002" +
    "\000\004\010\105\001\002\000\004\032\106\001\002\000" +
    "\004\011\107\001\002\000\004\045\110\001\002\000\004" +
    "\067\111\001\002\000\004\026\112\001\002\000\004\070" +
    "\113\001\002\000\004\071\114\001\002\000\014\004\041" +
    "\005\036\006\037\012\035\060\040\001\002\000\004\072" +
    "\116\001\002\000\004\076\uffd6\001\002\000\004\076\121" +
    "\001\002\000\004\064\231\001\002\000\006\077\126\100" +
    "\123\001\002\000\006\077\uffcb\100\uffcb\001\002\000\004" +
    "\025\132\001\002\000\006\077\uffcc\100\uffcc\001\002\000" +
    "\006\077\131\100\123\001\002\000\006\035\uffce\064\uffce" +
    "\001\002\000\006\077\uffca\100\uffca\001\002\000\006\077" +
    "\uffcd\100\uffcd\001\002\000\006\035\uffcf\064\uffcf\001\002" +
    "\000\004\033\133\001\002\000\004\007\134\001\002\000" +
    "\006\073\136\075\135\001\002\000\004\007\177\001\002" +
    "\000\004\007\137\001\002\000\004\031\140\001\002\000" +
    "\004\106\uffc4\001\002\000\004\106\143\001\002\000\006" +
    "\101\176\106\143\001\002\000\004\103\145\001\002\000" +
    "\006\101\uffc1\106\uffc1\001\002\000\004\033\146\001\002" +
    "\000\004\005\147\001\002\000\004\104\150\001\002\000" +
    "\004\033\151\001\002\000\004\005\152\001\002\000\004" +
    "\025\153\001\002\000\004\033\154\001\002\000\004\007" +
    "\155\001\002\000\014\004\041\005\036\006\037\012\035" +
    "\060\040\001\002\000\004\007\157\001\002\000\004\105" +
    "\160\001\002\000\004\033\161\001\002\000\004\007\162" +
    "\001\002\000\014\004\041\005\036\006\037\012\035\060" +
    "\040\001\002\000\004\007\164\001\002\000\004\074\165" +
    "\001\002\000\004\033\166\001\002\000\014\004\041\005" +
    "\036\006\037\012\035\060\040\001\002\000\004\031\170" +
    "\001\002\000\004\007\171\001\002\000\014\004\041\005" +
    "\036\006\037\012\035\060\040\001\002\000\004\007\173" +
    "\001\002\000\004\107\174\001\002\000\006\101\uffc0\106" +
    "\uffc0\001\002\000\006\101\uffc2\106\uffc2\001\002\000\006" +
    "\077\uffc3\100\uffc3\001\002\000\004\102\200\001\002\000" +
    "\004\033\201\001\002\000\004\007\202\001\002\000\014" +
    "\004\041\005\036\006\037\012\035\060\040\001\002\000" +
    "\004\007\204\001\002\000\004\031\205\001\002\000\004" +
    "\106\uffc9\001\002\000\004\106\210\001\002\000\006\101" +
    "\227\106\210\001\002\000\004\103\212\001\002\000\006" +
    "\101\uffc6\106\uffc6\001\002\000\004\033\213\001\002\000" +
    "\004\005\214\001\002\000\004\104\215\001\002\000\004" +
    "\033\216\001\002\000\004\005\217\001\002\000\004\105" +
    "\220\001\002\000\004\033\221\001\002\000\004\007\222" +
    "\001\002\000\014\004\041\005\036\006\037\012\035\060" +
    "\040\001\002\000\004\007\224\001\002\000\004\031\225" +
    "\001\002\000\004\107\226\001\002\000\006\101\uffc5\106" +
    "\uffc5\001\002\000\006\077\uffc8\100\uffc8\001\002\000\006" +
    "\101\uffc7\106\uffc7\001\002\000\004\002\uffd5\001\002\000" +
    "\004\002\uffbf\001\002\000\004\064\uffbd\001\002\000\004" +
    "\060\u0127\001\002\000\006\024\237\052\236\001\002\000" +
    "\004\033\u0109\001\002\000\004\033\240\001\002\000\004" +
    "\007\241\001\002\000\004\023\242\001\002\000\004\007" +
    "\243\001\002\000\010\025\245\031\246\052\244\001\002" +
    "\000\004\033\354\001\002\000\004\033\257\001\002\000" +
    "\006\046\251\050\250\001\002\000\004\035\256\001\002" +
    "\000\014\004\041\005\036\006\037\012\035\060\040\001" +
    "\002\000\014\004\041\005\036\006\037\012\035\060\040" +
    "\001\002\000\004\047\253\001\002\000\004\035\uffe1\001" +
    "\002\000\004\051\255\001\002\000\004\035\uffe2\001\002" +
    "\000\004\002\uffe3\001\002\000\004\007\260\001\002\000" +
    "\010\017\263\027\261\055\262\001\002\000\004\007\332" +
    "\001\002\000\004\007\276\001\002\000\004\007\264\001" +
    "\002\000\004\031\265\001\002\000\004\036\266\001\002" +
    "\000\004\026\271\001\002\000\004\035\270\001\002\000" +
    "\004\002\ufff2\001\002\000\004\037\272\001\002\000\004" +
    "\040\273\001\002\000\014\004\041\005\036\006\037\012" +
    "\035\060\040\001\002\000\004\041\275\001\002\000\004" +
    "\035\ufff1\001\002\000\004\031\277\001\002\000\004\063" +
    "\302\001\002\000\006\035\uffd9\063\302\001\002\000\004" +
    "\035\330\001\002\000\004\036\303\001\002\000\004\026" +
    "\304\001\002\000\004\037\305\001\002\000\004\042\306" +
    "\001\002\000\014\004\041\005\036\006\037\012\035\060" +
    "\040\001\002\000\004\043\310\001\002\000\004\065\311" +
    "\001\002\000\014\004\041\005\036\006\037\012\035\060" +
    "\040\001\002\000\004\066\313\001\002\000\004\044\314" +
    "\001\002\000\004\010\315\001\002\000\004\032\316\001" +
    "\002\000\004\011\317\001\002\000\004\045\320\001\002" +
    "\000\004\067\321\001\002\000\004\026\322\001\002\000" +
    "\004\070\323\001\002\000\004\042\324\001\002\000\014" +
    "\004\041\005\036\006\037\012\035\060\040\001\002\000" +
    "\004\043\326\001\002\000\004\064\327\001\002\000\006" +
    "\035\uffd8\063\uffd8\001\002\000\004\002\uffdb\001\002\000" +
    "\004\035\uffda\001\002\000\004\031\333\001\002\000\004" +
    "\036\334\001\002\000\004\026\337\001\002\000\004\035" +
    "\336\001\002\000\004\002\ufff4\001\002\000\004\037\340" +
    "\001\002\000\004\042\341\001\002\000\014\004\041\005" +
    "\036\006\037\012\035\060\040\001\002\000\004\043\343" +
    "\001\002\000\004\044\344\001\002\000\004\010\345\001" +
    "\002\000\004\032\346\001\002\000\004\011\347\001\002" +
    "\000\004\045\350\001\002\000\004\040\351\001\002\000" +
    "\014\004\041\005\036\006\037\012\035\060\040\001\002" +
    "\000\004\041\353\001\002\000\004\035\ufff3\001\002\000" +
    "\004\007\355\001\002\000\006\023\357\053\356\001\002" +
    "\000\004\007\u0102\001\002\000\004\007\360\001\002\000" +
    "\004\054\361\001\002\000\004\033\362\001\002\000\004" +
    "\007\363\001\002\000\004\026\364\001\002\000\004\007" +
    "\365\001\002\000\004\022\366\001\002\000\004\033\367" +
    "\001\002\000\004\007\370\001\002\000\004\010\371\001" +
    "\002\000\004\032\372\001\002\000\004\011\373\001\002" +
    "\000\004\007\374\001\002\000\004\031\375\001\002\000" +
    "\004\036\376\001\002\000\004\026\377\001\002\000\004" +
    "\037\u0100\001\002\000\004\035\u0101\001\002\000\004\002" +
    "\uffd7\001\002\000\004\031\u0103\001\002\000\004\036\u0105" +
    "\001\002\000\004\035\u0108\001\002\000\004\026\u0106\001" +
    "\002\000\004\037\u0107\001\002\000\004\035\uffef\001\002" +
    "\000\004\002\ufff0\001\002\000\004\007\u010a\001\002\000" +
    "\004\012\u010b\001\002\000\004\007\u010c\001\002\000\004" +
    "\031\u010d\001\002\000\004\036\u010e\001\002\000\004\026" +
    "\u010f\001\002\000\004\037\u0110\001\002\000\004\013\u0111" +
    "\001\002\000\004\015\u0112\001\002\000\004\026\u0125\001" +
    "\002\000\006\014\uffd1\015\u0112\001\002\000\004\014\u0115" +
    "\001\002\000\004\065\u0116\001\002\000\014\004\041\005" +
    "\036\006\037\012\035\060\040\001\002\000\004\066\u0118" +
    "\001\002\000\004\044\u0119\001\002\000\004\010\u011a\001" +
    "\002\000\004\032\u011b\001\002\000\004\011\u011c\001\002" +
    "\000\004\045\u011d\001\002\000\004\071\u011e\001\002\000" +
    "\014\004\041\005\036\006\037\012\035\060\040\001\002" +
    "\000\004\072\u0120\001\002\000\004\076\uffd4\001\002\000" +
    "\004\076\121\001\002\000\004\035\u0123\001\002\000\004" +
    "\002\uffd3\001\002\000\004\014\uffd2\001\002\000\004\016" +
    "\u0126\001\002\000\006\014\uffd0\015\uffd0\001\002\000\004" +
    "\033\u0128\001\002\000\004\007\u0129\001\002\000\004\026" +
    "\u012a\001\002\000\004\007\u012b\001\002\000\004\031\u012c" +
    "\001\002\000\004\063\u012d\001\002\000\004\065\u0132\001" +
    "\002\000\006\062\uffde\063\u012d\001\002\000\004\062\u0130" +
    "\001\002\000\004\002\uffe0\001\002\000\004\062\uffdf\001" +
    "\002\000\014\004\041\005\036\006\037\012\035\060\040" +
    "\001\002\000\004\066\u0134\001\002\000\004\044\u0135\001" +
    "\002\000\004\010\u0136\001\002\000\004\032\u0137\001\002" +
    "\000\004\011\u0138\001\002\000\004\045\u0139\001\002\000" +
    "\004\067\u013a\001\002\000\004\026\u013b\001\002\000\004" +
    "\070\u013c\001\002\000\004\042\u013d\001\002\000\014\004" +
    "\041\005\036\006\037\012\035\060\040\001\002\000\004" +
    "\043\u013f\001\002\000\004\071\u0140\001\002\000\014\004" +
    "\041\005\036\006\037\012\035\060\040\001\002\000\004" +
    "\072\u0142\001\002\000\004\076\uffdd\001\002\000\004\076" +
    "\121\001\002\000\004\064\u0145\001\002\000\006\062\uffdc" +
    "\063\uffdc\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u0143\000\034\014\022\015\014\021\016\024\012\026" +
    "\017\030\007\032\004\035\015\040\021\041\013\042\005" +
    "\045\003\046\006\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\012\017\060\020\041\047\057\050" +
    "\063\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\022\025\023\024\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\022\056\023" +
    "\024\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\017" +
    "\033\020\041\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\017\042\020\041\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\017\052\020\041\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\047\057\050\232\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\051\065\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\052\071\001\001\000\002" +
    "\001\001\000\006\017\073\020\041\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\017\101\020\041\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\017\114\020\041\001\001\000\002\001\001\000" +
    "\004\054\116\001\001\000\004\002\117\001\001\000\002" +
    "\001\001\000\012\003\124\004\123\005\121\006\126\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\010\004\127\005\121\006\126\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\057\140\001\001\000\006\007\141\010\143\001\001\000" +
    "\004\010\174\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\017\155\020\041\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\017\162\020\041\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\017\166\020\041\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\017\171\020\041\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\017\202\020\041\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\056\205\001\001\000\006" +
    "\011\206\012\210\001\001\000\004\012\227\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\017\222\020\041\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\025\246\001\001\000" +
    "\002\001\001\000\006\017\253\020\041\001\001\000\006" +
    "\017\251\020\041\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\027\266\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\017\273\020\041\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\036\300\037\277\001\001" +
    "\000\006\036\330\037\277\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\017\306\020\041\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\017\311\020\041\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\017\324\020\041\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\016\334\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\017\341\020\041" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\017\351\020\041\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\031\u0103\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\043\u0113\044\u0112\001\001\000\002\001\001" +
    "\000\006\043\u0123\044\u0112\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\017\u0116\020\041\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\017\u011e\020\041\001\001\000\002\001\001\000" +
    "\004\055\u0120\001\001\000\004\002\u0121\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\033\u012e\034\u012d\001\001\000\002\001\001\000\006" +
    "\033\u0130\034\u012d\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\017\u0132\020\041\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\017\u013d\020\041\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\017\u0140\020\041\001\001\000" +
    "\002\001\001\000\004\053\u0142\001\001\000\004\002\u0143" +
    "\001\001\000\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$parser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$parser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$parser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



public  String lUsuario;
public  String lNombre;
public  String pass;
public int respuesta;
public String msjCuenta;
public String rCorreo="";
    
        public LinkedList<Errores> lista         = new LinkedList<Errores>();
        public LinkedList<usuario> listaUsuarios = new LinkedList<usuario>();
        public usuario usuario;
        public LinkedList<correo> listaCorreos =new LinkedList<correo>();
        public LinkedList<archivo> listaArchivos = new LinkedList<archivo>();
public correo correo;

        public correo_envio correo_envio;

        /*Variable de salida*/
        public String Salida=new String();

            /**Metodo al que se llama automaticamente ante algun error sintactico.*/
public void syntax_error(Symbol s){
       // System.out.println("Error en la Linea " + (s.right+1) +" Columna "+s.left+ ". Identificador " +s.value + " no reconocido." );
        lista.add(new Errores(s.right+1,s.left,"Error sintactico Identificador " +s.value + " no reconocido." ));
}
             /**Metodo al que se llama en el momento en que ya no es posible una recuperacion de errores.*/
public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{
       // System.out.println("Error en la Linea " + (s.right+1)+ "Columna "+s.left+". Identificador " + s.value + " no reconocido.");
       // lista.add(new Errores(s.right+1,s.left,"Error sintactico2 Identificador " +s.value + " no reconocido." ));
}


}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$parser$actions {


int c=0;
String[] username;
LinkedList<String> destinatarios = new LinkedList<String>();
LinkedList<celdaPG> celdas;

LinkedList<archivo> archivos;


  private final parser parser;

  /** Constructor */
  CUP$parser$actions(parser parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$parser$do_action(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$parser$result;

      /* select the action based on the action number */
      switch (CUP$parser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // REC4 ::= 
            {
              Object RESULT =null;
		 RESULT= "EXITO"; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("REC4",40, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // REC4 ::= error1 TEXTO error2 
            {
              Object RESULT =null;
		int t1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int t1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String t1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		 RESULT = t1;  
              CUP$parser$result = parser.getSymbolFactory().newSymbol("REC4",40, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // REC3 ::= destinatario1 correo destinatario2 REC4 
            {
              Object RESULT =null;
		int t1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int t1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String t1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int t2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int t2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Object t2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 parser.rCorreo+=t1+":"+t2+"\n";  
              CUP$parser$result = parser.getSymbolFactory().newSymbol("REC3",39, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // REC2 ::= enviado1 REC3 enviado2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("REC2",37, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // LREC2 ::= REC2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("LREC2",38, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // LREC2 ::= REC2 LREC2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("LREC2",38, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // REC1 ::= correo1 LREC2 correo2 
            {
              Object RESULT =null;
		 parser.respuesta=9; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("REC1",36, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // MR1 ::= correo1 TEXTO correo2 
            {
              Object RESULT =null;
		int t1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int t1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String t1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		 parser.respuesta=8; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("MR1",35, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // CXL2 ::= celda1 fila igual num columna igual num tipo igual c2 TEXTO c2 color igual c2 TEXTO c2 formula igual TEXTO cerrar c2 TEXTO c2 celda2 
            {
              String RESULT =null;
		int t1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-21)).left;
		int t1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-21)).right;
		String t1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-21)).value;
		int t2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-18)).left;
		int t2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-18)).right;
		String t2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-18)).value;
		int t4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-14)).left;
		int t4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-14)).right;
		String t4 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-14)).value;
		int t3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).left;
		int t3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).right;
		String t3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-9)).value;
		int t5left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int t5right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		String t5 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int t6left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int t6right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String t6 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		 celdas.add(new celdaPG(t1, t2, t3, t4, t5, t6));  
              CUP$parser$result = parser.getSymbolFactory().newSymbol("CXL2",6, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-24)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // CXL1 ::= CXL2 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CXL1",5, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // CXL1 ::= CXL1 CXL2 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CXL1",5, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // A5 ::= archivo1 tipo igual c2 xl c2 cerrar NT$4 CXL1 archivo2 
            {
              String RESULT =null;
              // propagate RESULT from NT$4
                RESULT = (String) ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int t1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int t1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		String t1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		 archivos.add(new archivo(t1, "", celdas));  
              CUP$parser$result = parser.getSymbolFactory().newSymbol("A5",4, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // NT$4 ::= 
            {
              String RESULT =null;
		int t1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int t1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String t1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
 celdas = new LinkedList<celdaPG>(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("NT$4",45, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // CPG2 ::= celda1 fila igual num columna igual num color igual c2 TEXTO c2 cerrar celda2 
            {
              String RESULT =null;
		int t1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-10)).left;
		int t1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-10)).right;
		String t1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-10)).value;
		int t2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left;
		int t2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).right;
		String t2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		int t3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int t3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String t3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		 celdas.add(new celdaPG(t1, t2, t3, "", "", ""));  
              CUP$parser$result = parser.getSymbolFactory().newSymbol("CPG2",8, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-13)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // CPG1 ::= CPG2 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CPG1",7, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // CPG1 ::= CPG1 CPG2 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CPG1",7, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // A4 ::= archivo1 tipo igual c2 pg c2 tamanio igual c2 TEXTO c2 cerrar NT$3 CPG1 archivo2 
            {
              String RESULT =null;
              // propagate RESULT from NT$3
                RESULT = (String) ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int t1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-10)).left;
		int t1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-10)).right;
		String t1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-10)).value;
		int t2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int t2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		String t2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		 archivos.add(new archivo(t1, t2, celdas));  
              CUP$parser$result = parser.getSymbolFactory().newSymbol("A4",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-14)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // NT$3 ::= 
            {
              String RESULT =null;
		int t1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left;
		int t1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).right;
		String t1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		int t2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int t2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String t2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
 celdas = new LinkedList<celdaPG>();  
              CUP$parser$result = parser.getSymbolFactory().newSymbol("NT$3",44, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // A3 ::= A5 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("A3",2, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // A3 ::= A4 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("A3",2, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // A2 ::= A3 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("A2",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // A2 ::= A2 A3 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("A2",1, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // A1 ::= archivos1 archivos2 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("A1",0, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // A1 ::= archivos1 A2 archivos2 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("A1",0, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // LD2 ::= destinatario1 correo destinatario2 
            {
              Object RESULT =null;
		int t1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int t1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String t1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		 RESULT= t1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("LD2",34, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // LD1 ::= LD2 
            {
              Object RESULT =null;
		int t1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int t1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Object t1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 destinatarios.add(t1.toString()); RESULT=t1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("LD1",33, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // LD1 ::= LD2 LD1 
            {
              Object RESULT =null;
		int t1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int t1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Object t1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int t2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int t2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Object t2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 destinatarios.add(t1.toString());  
              CUP$parser$result = parser.getSymbolFactory().newSymbol("LD1",33, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // RNC1 ::= abrir sesion1 peticion igual c2 envio c2 cerrar usuario1 correo usuario2 destinatarios1 LD1 destinatarios2 asunto1 TEXTO asunto2 fecha1 fecha coma hora fecha2 contenido1 TEXTO contenido2 NT$2 A1 sesion2 
            {
              Object RESULT =null;
              // propagate RESULT from NT$2
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int t1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-18)).left;
		int t1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-18)).right;
		String t1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-18)).value;
		int t2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-12)).left;
		int t2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-12)).right;
		String t2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-12)).value;
		int t31left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).left;
		int t31right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).right;
		String t31 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-9)).value;
		int t32left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left;
		int t32right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).right;
		String t32 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		int t4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int t4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String t4 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		 parser.respuesta=7;  parser.correo_envio = new correo_envio(t1,destinatarios,t2,t31+","+t32,t4, archivos); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RNC1",32, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-27)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // NT$2 ::= 
            {
              Object RESULT =null;
		int t1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-15)).left;
		int t1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-15)).right;
		String t1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-15)).value;
		int t2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).left;
		int t2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).right;
		String t2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-9)).value;
		int t31left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left;
		int t31right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).right;
		String t31 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		int t32left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int t32right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String t32 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int t4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int t4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String t4 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
 archivos = new LinkedList<archivo>(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("NT$2",43, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // RPC1 ::= correo1 usuario1 correo usuario2 asunto1 TEXTO asunto2 fecha1 fecha coma hora fecha2 de1 correo de2 contenido1 TEXTO contenido2 NT$1 A1 correo2 
            {
              Object RESULT =null;
              // propagate RESULT from NT$1
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int t1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-18)).left;
		int t1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-18)).right;
		String t1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-18)).value;
		int t2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-15)).left;
		int t2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-15)).right;
		String t2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-15)).value;
		int t31left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-12)).left;
		int t31right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-12)).right;
		String t31 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-12)).value;
		int t32left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-10)).left;
		int t32right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-10)).right;
		String t32 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-10)).value;
		int t4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left;
		int t4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).right;
		String t4 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		int t5left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int t5right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String t5 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		 parser.respuesta=6; c++; parser.correo = new correo(c,t1,"",t2,t31+","+t32,t4,"",t5, archivos); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RPC1",31, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-20)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // NT$1 ::= 
            {
              Object RESULT =null;
		int t1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-15)).left;
		int t1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-15)).right;
		String t1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-15)).value;
		int t2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-12)).left;
		int t2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-12)).right;
		String t2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-12)).value;
		int t31left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).left;
		int t31right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).right;
		String t31 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-9)).value;
		int t32left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left;
		int t32right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).right;
		String t32 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		int t4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int t4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String t4 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int t5left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int t5right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String t5 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
 archivos = new LinkedList<archivo>(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("NT$1",42, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // PC1 ::= abrir sesion1 id igual c2 correo_t c2 peticion igual c2 correo_t c2 de igual c2 correo c2 fecha_t igual c2 fecha coma hora c2 cerrar usuario1 correo usuario2 sesion2 
            {
              Object RESULT =null;
		int t3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-13)).left;
		int t3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-13)).right;
		String t3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-13)).value;
		int t21left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).left;
		int t21right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).right;
		String t21 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-8)).value;
		int t22left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left;
		int t22right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).right;
		String t22 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		int t1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int t1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String t1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		 parser.respuesta=5; c++; parser.correo = new correo(c,t1,"","",t21+","+t22,t3,"", "", null);  
              CUP$parser$result = parser.getSymbolFactory().newSymbol("PC1",30, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-28)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // RLC3 ::= correo1 usuario1 correo usuario2 nombre1 TEXTO nombre2 asunto1 TEXTO asunto2 fecha1 fecha coma hora fecha2 de1 correo de2 nombre1 TEXTO nombre2 correo2 
            {
              Object RESULT =null;
		int t1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-19)).left;
		int t1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-19)).right;
		String t1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-19)).value;
		int t2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-16)).left;
		int t2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-16)).right;
		String t2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-16)).value;
		int t3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-13)).left;
		int t3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-13)).right;
		String t3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-13)).value;
		int t41left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-10)).left;
		int t41right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-10)).right;
		String t41 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-10)).value;
		int t42left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).left;
		int t42right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).right;
		String t42 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-8)).value;
		int t5left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int t5right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		String t5 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int t6left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int t6right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String t6 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		 c++; parser.listaCorreos.add(new correo(c,t1,t2,t3,t41+","+t42,t5,t6, "", null));  
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RLC3",29, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-21)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // RLC2 ::= RLC3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("RLC2",28, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // RLC2 ::= RLC3 RLC2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("RLC2",28, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // RLC1 ::= abrir sesion1 id igual c2 correo_t c2 tipo igual c2 lista c2 cerrar RLC2 sesion2 
            {
              Object RESULT =null;
		 parser.respuesta=4; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RLC1",27, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-14)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // LC3 ::= correo1 asunto1 TEXTO asunto2 fecha1 fecha coma hora fecha2 de1 correo de2 nombre1 TEXTO nombre2 contenido1 TEXTO contenido2 NT$0 A1 correo2 
            {
              Object RESULT =null;
              // propagate RESULT from NT$0
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int t1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-18)).left;
		int t1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-18)).right;
		String t1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-18)).value;
		int t21left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-15)).left;
		int t21right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-15)).right;
		String t21 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-15)).value;
		int t22left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-13)).left;
		int t22right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-13)).right;
		String t22 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-13)).value;
		int t3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-10)).left;
		int t3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-10)).right;
		String t3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-10)).value;
		int t4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left;
		int t4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).right;
		String t4 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		int t5left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int t5right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String t5 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		 c++; parser.listaCorreos.add(new correo(c,"","",t1,t21+","+t22,t3,t4,t5, archivos)); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("LC3",26, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-20)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // NT$0 ::= 
            {
              Object RESULT =null;
		int t1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-15)).left;
		int t1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-15)).right;
		String t1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-15)).value;
		int t21left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-12)).left;
		int t21right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-12)).right;
		String t21 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-12)).value;
		int t22left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-10)).left;
		int t22right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-10)).right;
		String t22 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-10)).value;
		int t3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left;
		int t3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).right;
		String t3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		int t4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int t4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String t4 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int t5left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int t5right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String t5 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
 archivos = new LinkedList<archivo>(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("NT$0",41, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // LC2 ::= LC3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("LC2",25, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // LC2 ::= LC3 LC2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("LC2",25, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // LC1 ::= abrir correos1 usuario igual c2 correo c2 cerrar LC2 correos2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("LC1",24, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // RC2 ::= error1 TEXTO error2 
            {
              String RESULT =null;
		int t1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int t1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String t1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		 parser.msjCuenta= t1; parser.respuesta=1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RC2",19, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // RC2 ::= registro1 TEXTO registro2 
            {
              String RESULT =null;
		int t1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int t1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String t1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		 parser.msjCuenta= t1; parser.respuesta=2; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RC2",19, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // RC1 ::= abrir sesion1 id igual c2 correo_t c2 cerrar RC2 sesion2 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("RC1",18, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // LU3 ::= usuario1 usuario1 correo usuario2 nombre1 TEXTO nombre2 fecha1 fecha coma hora fecha2 clave1 TEXTO clave2 usuario2 
            {
              usuario RESULT =null;
		int t1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-13)).left;
		int t1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-13)).right;
		String t1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-13)).value;
		int t2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-10)).left;
		int t2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-10)).right;
		String t2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-10)).value;
		int t31left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left;
		int t31right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).right;
		String t31 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		int t32left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int t32right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		String t32 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int t4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int t4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String t4 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		 username = t1.split("@");  parser.listaUsuarios.add(new usuario(t1, username[0], t2, t31+","+t32, t4));  
              CUP$parser$result = parser.getSymbolFactory().newSymbol("LU3",17, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-15)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // LU2 ::= LU3 
            {
              usuario RESULT =null;
		int nt1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int nt1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		usuario nt1 = (usuario)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		  
              CUP$parser$result = parser.getSymbolFactory().newSymbol("LU2",16, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // LU2 ::= LU3 LU2 
            {
              usuario RESULT =null;
		int nt1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int nt1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		usuario nt1 = (usuario)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int nt2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int nt2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		usuario nt2 = (usuario)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		   
              CUP$parser$result = parser.getSymbolFactory().newSymbol("LU2",16, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // LU1 ::= usuarios1 LU2 usuarios2 
            {
              usuario RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("LU1",15, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // CADENA ::= usuario 
            {
              String RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String t = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		  RESULT=t; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("CADENA",14, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // CADENA ::= envio 
            {
              String RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String t = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		  RESULT=t; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("CADENA",14, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // CADENA ::= signos 
            {
              String RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String t = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		  RESULT=t; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("CADENA",14, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // CADENA ::= num 
            {
              String RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String t = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		  RESULT=t; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("CADENA",14, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // CADENA ::= cad 
            {
              String RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String t = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		  RESULT=t; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("CADENA",14, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // TEXTO ::= CADENA 
            {
              String RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String t = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		  RESULT= t.toString();  
              CUP$parser$result = parser.getSymbolFactory().newSymbol("TEXTO",13, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // TEXTO ::= CADENA TEXTO 
            {
              String RESULT =null;
		int t1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int t1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String t1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int t2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int t2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String t2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		  t1 = t1+" "+t2;  RESULT=t1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("TEXTO",13, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // PLC2 ::= usuario1 correo usuario2 
            {
              Object RESULT =null;
		int t1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int t1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String t1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		 parser.lUsuario = t1; parser.respuesta= 3; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("PLC2",23, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // PLC1 ::= abrir sesion1 id igual c2 correo_t c2 peticion igual c2 listaC c2 cerrar PLC2 sesion2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PLC1",22, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-14)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // IS2 ::= usuario1 correo usuario2 clave1 TEXTO clave2 
            {
              String RESULT =null;
		int t1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int t1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String t1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int t2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int t2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String t2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		 username = t1.split("@"); parser.usuario = new usuario(t1, username[0], "", "", t2); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("IS2",21, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // IS1 ::= abrir sesion1 id igual c2 correo_t c2 tipo igual c2 inicio c2 cerrar IS2 sesion2 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("IS1",20, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-14)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // C2 ::= usuario1 correo usuario2 nombre1 TEXTO nombre2 fecha1 fecha coma hora fecha2 clave1 TEXTO clave2 
            {
              String RESULT =null;
		int t1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-12)).left;
		int t1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-12)).right;
		String t1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-12)).value;
		int t2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).left;
		int t2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).right;
		String t2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-9)).value;
		int t31left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left;
		int t31right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).right;
		String t31 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		int t32left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int t32right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String t32 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int t4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int t4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String t4 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		  username = t1.split("@"); parser.usuario = new usuario(t1, username[0], t2, t31+","+t32, t4); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("C2",12, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-13)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // C1 ::= abrir sesion1 id igual c2 correo_t c2 tipo igual c2 registro c2 cerrar C2 sesion2 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("C1",11, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-14)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // INICIA ::= REC1 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INICIA",10, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // INICIA ::= MR1 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INICIA",10, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // INICIA ::= RNC1 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INICIA",10, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // INICIA ::= RPC1 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INICIA",10, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // INICIA ::= PC1 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INICIA",10, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // INICIA ::= RLC1 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INICIA",10, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // INICIA ::= LC1 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INICIA",10, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // INICIA ::= PLC1 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INICIA",10, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // INICIA ::= IS1 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INICIA",10, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // INICIA ::= RC1 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INICIA",10, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // INICIA ::= LU1 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INICIA",10, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // INICIA ::= C1 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INICIA",10, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= INICIA EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String start_val = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		RESULT = start_val;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$parser$parser.done_parsing();
          return CUP$parser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

